
词汇表
======

:math:`\downarrow`:
当该符号放置在一组显示的分数数字的末尾时，强调右侧不再有非零数字；
显示的分数是准确的。
与“:math:`\cdots`”相反，表示最后显示的数字之后还有非零数字。 第 3.1
节，第 26 页。

**c-solution**: 在计算中，涉及实数的问题的 c-solution是满足问题陈述的
ubox 的\ **最小完整**\ 集合。 第 15.3 节，第 199 页。

**computational speed**:
在特定计算任务的背景下，计算速度是每秒获得的信息。
请注意，这不是该短语的常规含义，该短语通常用于表示每秒执行的活动（例如每秒操作数或每秒指令数），无论该活动是否产生有关答案的信息。
第 15.6 节，第 211 页。

**dependency problem**:
依赖性问题是由于将同一变量的多次出现视为独立的而导致的区间计算范围过大，而实际上它们并非独立。
第 16.3 节，第 220 页。

**esizesize**: esizesize 是分配用于存储 unum 指数字段中最大位数的位数。
指数位数 es 的范围为 1 到 :math:`2^{esizesize}`\ 。 第 4.3 节，第 39
页。

**fsizesize**: fsizesize 是分配用于存储 unum 小数字段中最大位数的位数。
小数位数 fs 的范围为 1 到 :math:`2^{fsizesize}`\ 。 第 4.3 节，第 39
页。

**g-layer**: g 层是计算系统的暂存器部分，其中计算结果使得当返回到 u
层时它们始终正确到最小的可表示不确定性。 第 5.3.1 节，第 66 页。

**gbound**: gbound 是一种数据结构，用于以比 unum
环境更高的精度执行的临时计算； 即暂存器。
较高的精度是足以确定当前环境中正确的 unum 或 ubound 结果的精度。
发音为“jee-bound”。 第 5.3.1 节，第 65 页。

**guess**: 猜测是从一系列实际值中选择（或邻近）的精确可表示值。
四舍五入的数字是一种猜测形式。 在 unums
的上下文中，猜测是一个显式命令，用类似浮点的舍入误差替换 unum 或
ubound，而不是遵循数学规则。 第 18.1 节，第 257 页

**h-layer**: h 层是数字（和异常量）以人类可以理解的形式表示的层。
h层不限于代表数字的字符串； h
层量可以是图形信息、机械运动或人类可物理感知的任何其他内容，或者可以由人类作为计算机系统的输入提供的内容。
第 5.4.1 节，第 74 页。

**information**:
在特定计算问题的上下文中，信息是限制答案的集合总体积的倒数。
可能的最大信息是 c-solution 容量的倒数。
根据此定义，当结果没有已知界限（浮点计算）或界限无限时（常见于区间算术的随意使用），信息为零。
第 15.6 节，第 210 页。

**maxreal**: maxreal 值是格式可以表达的最大有限值。
它比无穷大的表示形式小一个 ULP。 动态范围的另一端从小到正常。 第 3.2
节，第 28 页。

**maxubits**: maxbits 是 unum 在给定环境中可以拥有的最大位数。
当unum环境设置为\ :math:`\{esizesize, fsizesize\}`\ 时，maxbits的值为\ :math:`2 + esizesize + fsizesize + 2^{esizesize} + 2^{fsizesize}`\ 。
（最小位数就是 :math:`3 + utagsize`\ 。）第 4.4 节，第 40 页。

**smallsubnormal**: 值smallsubnormal 是格式可以表达的大于零的最小值。
它是大于零的一个 ULP，使用格式允许的最大分数长度。 maxreal
动态范围的另一端。 第 3.2 节，第 29 页

**summary bit**: 摘要位表示 unum
的某个关键特征，原本只能通过检查位的组合来导出； 它可以通过存储 unum
的“预先解码”属性来节省计算时间和能量。 例如，单个位可以指示 unum
具有无限大小，从而使算术逻辑省去了检查 unum
中除符号位之外的每个位的麻烦。 第 7.3.2 节，第 100 页。

**u-layer**: u 层是计算机算术级别，其中所有操作数都是 unum（以及由 unum
构成的数据结构，如 ubound 和 ubox）。 第 5.2.1 节，第 63 页。

**ubit**: ubit 是 unum 格式中的一个位，如果 unum 是精确的，则为 0；如果
unum 表示两个精确的 unum 之间的开区间，则为 1。 也就是说，1
表示分数中有更多位，但在 unum 的特定格式设置中没有空间来存储它们。
读音是“cubit”。 第 3.1 节，第 27 页。

**ubound**: ubound 可以是单个 unum，也可以是代表一个 unum 的一对 unum。
实数线上的数学区间。 闭端点由精确的 unum 表示，开端点由不精确的 unum
表示。
它们比传统的“区间算术”区间更强大，因为它们可以表示开放端点和封闭端点，这对其算术行为具有广泛的影响。
第 5.2.1 节，第 62 页。

**ubox**: ubox 是由 n 个 unum 的列表表示的 n 维形状。
它们是表达解集以及中间计算的基本构建块。
请注意，其中任何特定维度都可以为零（精确值）或宽度为 2
的幂（即在某种精度下为 1 ULP）的开区间。 例如，在三维空间中，ubox
形状可以是一个点、一条不包括其端点的线段、矩形的内部或盒子的内部。 第
15.3 节，第 199 页。

**ULP**: ULP（与 gulp
同音）是由位串表示的精确值之间的差异，这些值在最后一位（小数的最后一位）中相差一个单位。
有些文本使用“最不精确单位 Unit of Least Precision”作为缩写短语。 第 3.1
节，第 27 页

**unum**: unum
是可变长度的位串，具有六个子字段：符号位、指数域、小数域、不确定性位、指数大小域和分数大小域。
它表示一个浮点数或两个仅在小数最后一位不同的浮点数之间的开区间。
发音为“you-num”，因为它是“通用数字”的缩写。 在第 4 页第 1.1 节中介绍；
完整讨论见第 4 章第 35 – 54 页。

**utag**: utag 是三个自描述字段的集合，用于区分 unum 和 float。
这些字段是 ubit、指数大小位和小数大小位，位于 IEEE
样式浮点的三个字段（符号位、指数位和小数位）的右侧。 第 40 页，第 4.3
节。

**utagsize**: *utagsize* 是 utag 位串的长度（以位数为单位）。
其值为\ :math:`1+esizesize+fsizesize`\ 。 第 40 页，第 4.4 节。

**Warlpiri unums**: Warlpiri unum 是可能的最小 unum，即 {0, 0} 环境。
它们有一个符号位、一个指数位、一个分数位和一个 ubit。
因此，它们的长度为四位，十六个可能的位串代表十五个不同的值（精确数字、开放数字范围、正无穷大和负无穷大、以及信号
NaN 和安静 Nan），零被表示两次。 第 7.1 节，第 94 页。

**wrapping problem**:
环绕问题是指区间计算中出现过大的边界，这是由于使用单个轴对齐框限制多维结果集而导致的。
也就是说，对于体积较小的复杂形状，使用简单的盒形边界，导致信息丢失。 第
16.2 节，第 216 页。
